name: Build & Release App

permissions:
  contents: write

on:
  # Builds the app when a new tag is created
  push:
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

run-name: Release ${{ github.ref_name }}

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Use Stock Electron (Ubuntu ARM only)
        if: matrix.os == 'ubuntu-24.04-arm'
        run: bun run script:use-stock-electron

      - name: Install Build Dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-24.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak-builder elfutils dpkg fakeroot

      - name: Install Additional Build Dependencies (Ubuntu ARM only)
        if: matrix.os == 'ubuntu-24.04-arm'
        run: |
          sudo apt-get install -y ruby ruby-dev
          sudo gem install --no-document fpm

      - name: Setup Flatpak (Ubuntu only)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-24.04-arm'
        run: |
          flatpak remote-add --if-not-exists --user flathub https://dl.flathub.org/repo/flathub.flatpakrepo

      - name: Install Dependencies
        run: bun install --development --frozen-lockfile
        env:
          SHARP_IGNORE_GLOBAL_LIBVIPS: 1

      - name: Install Castlabs EVS
        if: matrix.os == 'macos-latest' || matrix.os == 'macos-13' || matrix.os == 'windows-latest'
        run: python3 -m pip install --upgrade castlabs-evs --break-system-packages

      - name: Login to Castlabs EVS (macOS)
        if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
        continue-on-error: true
        run: python3 -m castlabs_evs.account --no-ask reauth -A $ACCOUNT_NAME -P $PASSWD
        env:
          ACCOUNT_NAME: ${{ secrets.CASTLABS_EVS_ACCOUNT_NAME }}
          PASSWD: ${{ secrets.CASTLABS_EVS_PASSWORD }}

      - name: Login to Castlabs EVS (Windows)
        if: matrix.os == 'windows-latest'
        continue-on-error: true
        shell: cmd
        run: python3 -m castlabs_evs.account --no-ask reauth -A "%ACCOUNT_NAME%" -P "%PASSWD%"
        env:
          ACCOUNT_NAME: ${{ secrets.CASTLABS_EVS_ACCOUNT_NAME }}
          PASSWD: ${{ secrets.CASTLABS_EVS_PASSWORD }}

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-24.04-arm'
        run: bun run build:linux -p always
        env:
          USE_SYSTEM_FPM: ${{ matrix.os == 'ubuntu-24.04-arm' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build for macOS
        if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
        run: bun run build:mac -p always
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_API_KEY_DATA: ${{ secrets.APPLE_API_KEY_DATA }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: bun run build:win -p always
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.tar.gz
            dist/*.yml
            dist/*.blockmap
            dist/*.flatpak
